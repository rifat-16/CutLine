rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }
    
    // Salons collection
    match /salons/{salonId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && getUserRole() == 'owner';
      allow update: if request.auth != null 
        && resource.data.ownerId == request.auth.uid;
      allow delete: if request.auth != null 
        && resource.data.ownerId == request.auth.uid;
      
      // Barbers subcollection
      match /barbers/{barberId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null 
          && getUserRole() == 'owner';
        allow update: if request.auth != null 
          && (request.auth.uid == barberId || getUserRole() == 'owner');
        allow delete: if request.auth != null 
          && getUserRole() == 'owner';
        
        // Queue subcollection
        match /queue/{queueId} {
          allow read: if request.auth != null;
          allow create: if request.auth != null;
          allow update: if request.auth != null 
            && (request.auth.uid == barberId || getUserRole() == 'owner');
          allow delete: if request.auth != null 
            && (request.auth.uid == barberId || getUserRole() == 'owner');
        }
      }
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
  }
}
